image: 'alpine:latest'
pipelines:
  custom:
    force-redeploy:
      - variables:
          name: Environment
          default: spartafyapp/
          allowed-values:
            - spartafyapp/
            - spartafyfeature/
            - spartafyhotfix/
            - spartafypreprod/
      - step:
          name: 'Unit tests'
          script:
            - apk update && apk upgrade
            - apk add php8
            - wget https://phar.phpunit.de/phpunit-9.5.phar
            - php phpunit-9.5.phar --no-configuration --bootstrap vendor/autoload.php tests
      - step:
          name: 'Static Analysis & Coding standards'
          script:
            - apk update && apk upgrade
            - apk add php8 php8-phar php8-json php8-tokenizer php8-ctype php8-mbstring php8-xmlwriter php8-simplexml
            - for file in $(find src -type f -name "*.php"); do php -l $file; done
            - wget https://github.com/phpstan/phpstan/releases/download/1.2.0/phpstan.phar
            - php phpstan.phar --no-progress --memory-limit=1G --level=1 analyse src
            - wget https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
            - php phpcs.phar -s --report=summary --extensions=php --standard=PSR12 src
      - step:
          name: 'Compile and Deploy'
          script:
            - apk update && apk upgrade
            - apk add nodejs npm php8 bash curl git openssh
            - npm install uglify-js -g
            - for f in $(find assets -maxdepth 30 -type f -name '*.js'' -and -not -name ''*.min.js''); do to=".min.js"; filename=${f/.js/$to}; uglifyjs --compress --mangle -- "$f" > $filename; echo "!${filename}" >> .git-ftp-include; done'
            - npm install -g sass
            - sass --update assets:public --style=compressed
            - echo "!/public/" >> .git-ftp-include;
            - wget https://github.com/composer/composer/releases/download/2.4.4/composer.phar
            - php composer.phar install
            - echo "!/vendor/" >> .git-ftp-include;
            - git submodule update --init --recursive
            - curl https://raw.githubusercontent.com/git-ftp/git-ftp/master/git-ftp > /bin/git-ftp
            - chmod 755 /bin/git-ftp
            - git ftp push --auto-init --force -u "$FTP_USERNAME" -p "$FTP_PASSWORD" ftp://$FTP_HOST/${Environment}
  branches:
    'feature/*':
      - step:
          name: 'Compile and Deploy'
          script:
            - apk update && apk upgrade
            - apk add nodejs npm php8 bash curl git openssh
            - npm install uglify-js -g
            - for f in $(find assets -maxdepth 30 -type f -name '*.js'' -and -not -name ''*.min.js''); do to=".min.js"; filename=${f/.js/$to}; uglifyjs --compress --mangle -- "$f" > $filename; echo "!${filename}" >> .git-ftp-include; done'
            - npm install -g sass
            - sass --update assets:public --style=compressed
            - echo "!/public/" >> .git-ftp-include;
            - wget https://github.com/composer/composer/releases/download/2.4.4/composer.phar
            - php composer.phar install
            - echo "!/vendor/" >> .git-ftp-include;
            - featureBranchName=$(echo $BITBUCKET_BRANCH | cut -d '/'' -f2)'
            - git submodule update --init --recursive
            - curl https://raw.githubusercontent.com/git-ftp/git-ftp/master/git-ftp > /bin/git-ftp
            - chmod 755 /bin/git-ftp
            - git ftp push --auto-init -u "$FTP_USERNAME" -p "$FTP_PASSWORD" ftp://$FTP_HOST/spartafyfeature/${featureBranchName}/
    hotfix:
      - step:
          name: 'Static Analysis & Coding standards'
          script:
            - apk update && apk upgrade
            - apk add php8 php8-phar php8-json php8-tokenizer php8-ctype php8-mbstring php8-xmlwriter php8-simplexml
            - for file in $(find src -type f -name "*.php"); do php -l $file; done
            - wget https://github.com/phpstan/phpstan/releases/download/1.2.0/phpstan.phar
            - php phpstan.phar --no-progress --memory-limit=1G --level=1 analyse src
            - wget https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
            - php phpcs.phar -s --report=summary --extensions=php --standard=PSR12 src
      - step:
          name: 'Unit tests'
          script:
            - apk update && apk upgrade
            - apk add php8
            - wget https://phar.phpunit.de/phpunit-9.5.phar
            - php phpunit-9.5.phar --no-configuration --bootstrap vendor/autoload.php tests
      - step:
          name: 'Compile and Deploy'
          script:
            - apk update && apk upgrade
            - apk add nodejs npm php8 bash curl git openssh
            - npm install uglify-js -g
            - for f in $(find assets -maxdepth 30 -type f -name '*.js'' -and -not -name ''*.min.js''); do to=".min.js"; filename=${f/.js/$to}; uglifyjs --compress --mangle -- "$f" > $filename; echo "!${filename}" >> .git-ftp-include; done'
            - npm install -g sass
            - sass --update assets:public --style=compressed
            - echo "!/public/" >> .git-ftp-include;
            - wget https://github.com/composer/composer/releases/download/2.4.4/composer.phar
            - php composer.phar install
            - echo "!/vendor/" >> .git-ftp-include;
            - git submodule update --init --recursive
            - curl https://raw.githubusercontent.com/git-ftp/git-ftp/master/git-ftp > /bin/git-ftp
            - chmod 755 /bin/git-ftp
            - git ftp push --auto-init -u "$FTP_USERNAME" -p "$FTP_PASSWORD" ftp://$FTP_HOST/spartafyhotfix/
    master:
      - step:
          name: 'Static Analysis & Coding standards'
          script:
            - apk update && apk upgrade
            - apk add php8 php8-phar php8-json php8-tokenizer php8-ctype php8-mbstring php8-xmlwriter php8-simplexml
            - for file in $(find src -type f -name "*.php"); do php -l $file; done
            - wget https://github.com/phpstan/phpstan/releases/download/1.2.0/phpstan.phar
            - php phpstan.phar --no-progress --memory-limit=1G --level=1 analyse src
            - wget https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
            - php phpcs.phar -s --report=summary --extensions=php --standard=PSR12 src
      - step:
          name: 'Unit tests'
          script:
            - apk update && apk upgrade
            - apk add php8
            - wget https://phar.phpunit.de/phpunit-9.5.phar
            - php phpunit-9.5.phar --no-configuration --bootstrap vendor/autoload.php tests
      - step:
          name: 'Compile and Deploy'
          script:
            - apk update && apk upgrade
            - apk add nodejs npm php8 bash curl git openssh
            - npm install uglify-js -g
            - for f in $(find assets -maxdepth 30 -type f -name '*.js'' -and -not -name ''*.min.js''); do to=".min.js"; filename=${f/.js/$to}; uglifyjs --compress --mangle -- "$f" > $filename; echo "!${filename}" >> .git-ftp-include; done'
            - npm install -g sass
            - sass --update assets:public --style=compressed
            - echo "!/public/" >> .git-ftp-include;
            - wget https://github.com/composer/composer/releases/download/2.4.4/composer.phar
            - php composer.phar install
            - echo "!/vendor/" >> .git-ftp-include;
            - git submodule update --init --recursive
            - curl https://raw.githubusercontent.com/git-ftp/git-ftp/master/git-ftp > /bin/git-ftp
            - chmod 755 /bin/git-ftp
            - git ftp push --auto-init -u "$FTP_USERNAME" -p "$FTP_PASSWORD" ftp://$FTP_HOST/spartafypreprod/
      - step:
          name: 'Compile and Deploy'
          trigger: manual
          script:
            - apk update && apk upgrade
            - apk add nodejs npm php8 bash curl git openssh
            - npm install uglify-js -g
            - for f in $(find assets -maxdepth 30 -type f -name '*.js'' -and -not -name ''*.min.js''); do to=".min.js"; filename=${f/.js/$to}; uglifyjs --compress --mangle -- "$f" > $filename; echo "!${filename}" >> .git-ftp-include; done'
            - npm install -g sass
            - sass --update assets:public --style=compressed
            - echo "!/public/" >> .git-ftp-include;
            - wget https://github.com/composer/composer/releases/download/2.4.4/composer.phar
            - php composer.phar install
            - echo "!/vendor/" >> .git-ftp-include;
            - git submodule update --init --recursive
            - curl https://raw.githubusercontent.com/git-ftp/git-ftp/master/git-ftp > /bin/git-ftp
            - chmod 755 /bin/git-ftp
            - git ftp push --auto-init -u "$FTP_USERNAME" -p "$FTP_PASSWORD" ftp://$FTP_HOST/spartafyapp/
  pull-requests:
    '**':
      - step:
          name: 'Unit tests'
          script:
            - apk update && apk upgrade
            - apk add php8
            - wget https://phar.phpunit.de/phpunit-9.5.phar
            - php phpunit-9.5.phar --no-configuration --bootstrap vendor/autoload.php tests
      - step:
          name: 'Static Analysis & Coding standards'
          script:
            - apk update && apk upgrade
            - apk add php8 php8-phar php8-json php8-tokenizer php8-ctype php8-mbstring php8-xmlwriter php8-simplexml
            - for file in $(find src -type f -name "*.php"); do php -l $file; done
            - wget https://github.com/phpstan/phpstan/releases/download/1.2.0/phpstan.phar
            - php phpstan.phar --no-progress --memory-limit=1G --level=1 analyse src
            - wget https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
            - php phpcs.phar -s --report=summary --extensions=php --standard=PSR12 src
